# Workers options

# адрес и порт прослушивания
bind = "127.0.0.1:8000"
# максимальное число подключений
backlog = 64
# число обработчиковo
workers = 16
# тип обработчиков
worker_class = "sync"

# число потоков на 1 обработчика
# указывается только для обработчиков типа
# gthread
# threads

# максимальное число одновременно подключенных клиентов
# указывается для обработчиков типа eventlet и gevent
# worker_connections

# количество обработанных обработчиком запросов перед его перезвпуском
# если 0, то перезапуск отключен
max_requests = 0

# допустимое случайное отклонение от значения предыдущего параметра
# нужно для исключееия одновременной перезагрузки всех обработчиков
max_requests_jitter = 0

# время ожилания отклика обработчика перед его насильственным закрытием
timeout = 30

# время, выделяемое обработчику для плавного завершения
graceful_timeout = 30

# время ожидания запроса для соединений типа keep alive
# обрвботчики типа sync эту опцию не воспринимают
keepalive = 2

# Security options

# Максимальный размер http запроса в байтах
limit_request_line = 4094
# лимит по количеству заголовков в запросе
limit_request_fields = 100
# максимальный размер http заголовка в байтах
limit_request_field_size = 8190

# Debugging options

# Опция управляет перезапуском обработчиков при изменении приложения
# Значение по умолчанию - false
reload = True

# менеджер перезагрузки обработчика ппи изменении приложения
# может быть auto, poll, inotify
# значееие по умолчанию inotify
reload_engine = "auto"

# опция заставляет перезагружаться обработчик при изменении
# дополнмтельных файлов приложения ( шаблонов, конфигураций, и.т.д.)
# в качестве значения принимает список отслеживаемых файлов
reload_extra_files = []

# опция активизирует вывод каждой выполненной строки кода приложения в лог
# значение по умолчанию False
# spew = False

# проверить конфиг при запуске?
# опция использзуется при вызове gunicorn из командной строки
# для конфига не применима
# check_config

# Server mechanics options

# нужно ли прозводить предзагрузку приложений перед запуском обработчика?
# значение по умолчанию False
# preload_app = False

# запрет использования фукции sendfile()
# значение по умолчанию None
# sendfile = None

# установить флаг SO_REUSEPORT для прослушиваемого сокета
# значение по умолчанию False
# reuse_port = False

# опция позволяет изменить активную директорию перед загрузкой приложения
# chdir

# демон nизовать процесс
# значение по умолчанию False
# daemon = False

# опция позволяет установить значения для произвольных переменных окружения
# воспринимает список [“key=value"]
# raw_env = []

# имя файла, используемого в качестве pid
# значение по умолчанию None
# значение None обозначает неиспользование pid файла
# pidfile = None

# директория , используемая обработчиками в качестве временной
# значение по умолчанию None обозначает, что будет использована временная
# директория по умолчанию
# worker_tmp_dir = None

# пользователь, под которым запускаются обработчики
# в качестве значения указывается или имя пользователя или идентификатор
# пользователя
# значение None не приводит к изменению пользователя, под которым стартуют
# обработчики
user = "nobody"

# пользовательская группа, под которым запускаются обработчики
# в качестве значения указывается или имя группы или идентификатор
# группы
# значение None не приводит к изменению группы, от имени которой стартуют
# обработчики
group = "nogroup"

# битовая маска прав доступа к файлам, создаваемым gunicorn
umask = 133

# разрешить доступ обработчика к файлам всех групп, к которым принадлежит
# пользователь
# значение по умолчанию False
# initgroups = False

# устаревающая опция
# можно не указывать
# tmp_upload_dir

# словарь, содержащий http загодовки, которые фронтенд использует для
# идентификации https запросов
# значение по умолчанию {'X-FORWARDED-PROTOCOL': 'ssl', 'X-FORWARDED-PROTO':
# 'https', 'X-FORWARDED-SSL': 'on'}
#secure_scheme_headers = {'X-FORWARDED-PROTOCOL': 'ssl',
#                         'X-FORWARDED-PROTO': 'https',
#                         'X-FORWARDED-SSL': 'on'}

# ip фронтенда, с которого допустимо принимать защищенные запросы
# значение по умолчанию 127.0.0.1
# forwarded_allow_ips = "127.0.0.1"

# Logging


